"use strict";(self.webpackChunkstas=self.webpackChunkstas||[]).push([[3144],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>p});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var d=r.createContext({}),u=function(n){var e=r.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},l=function(n){var e=u(n.components);return r.createElement(d.Provider,{value:e},n.children)},s="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},_=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,d=n.parentName,l=c(n,["components","mdxType","originalType","parentName"]),s=u(t),_=a,p=s["".concat(d,".").concat(_)]||s[_]||m[_]||i;return t?r.createElement(p,o(o({ref:e},l),{},{components:t})):r.createElement(p,o({ref:e},l))}));function p(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,o=new Array(i);o[0]=_;var c={};for(var d in e)hasOwnProperty.call(e,d)&&(c[d]=e[d]);c.originalType=n,c[s]="string"==typeof n?n:a,o[1]=c;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},9974:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const i={title:"\u6574\u5408\u6253\u5305\u4ee3\u7801"},o="\u6574\u5408\u6253\u5305\u4ee3\u7801",c={unversionedId:"electronics/communication/serial/i2c/chapter4",id:"electronics/communication/serial/i2c/chapter4",title:"\u6574\u5408\u6253\u5305\u4ee3\u7801",description:"\u5b8c\u6574\u7684 DS3231 I2C \u901a\u4fe1\u4ee3\u7801\u5982\u4e0b\uff1a",source:"@site/docs/electronics/communication/serial/i2c/chapter4.md",sourceDirName:"electronics/communication/serial/i2c",slug:"/electronics/communication/serial/i2c/chapter4",permalink:"/docs/electronics/communication/serial/i2c/chapter4",draft:!1,tags:[],version:"current",frontMatter:{title:"\u6574\u5408\u6253\u5305\u4ee3\u7801"},sidebar:"docs",previous:{title:"\u4ee3\u7801\u903b\u8f91\u5206\u6790",permalink:"/docs/electronics/communication/serial/i2c/chapter3"},next:{title:"\u603b\u7ed3\u548c\u62d3\u5c55",permalink:"/docs/electronics/communication/serial/i2c/chapter5"}},d={},u=[],l={toc:u},s="wrapper";function m(n){let{components:e,...t}=n;return(0,a.kt)(s,(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6574\u5408\u6253\u5305\u4ee3\u7801"},"\u6574\u5408\u6253\u5305\u4ee3\u7801"),(0,a.kt)("p",null,"\u5b8c\u6574\u7684 DS3231 I2C \u901a\u4fe1\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <Wire.h>\n\n#define DS3231_ADDRESS 0x68\n#define SECOND_ADDRESS 0x00\n#define ALARM1_SECOND_ADDRESS 0x07\n#define ALARM2_MINUTE_ADDRESS 0x0B\n#define STATUS_ADDRESS 0x0F\n#define TEMPERATURE_ADDRESS 0x11\n\n// \u65f6\u95f4\u7684\u7ed3\u6784\u4f53\nstruct Time {\n  uint16_t year;  //\u5e74\n  uint8_t mon;    //\u6708\n  uint8_t date;   //\u65e5\n  uint8_t hour;   //\u65f6\n  uint8_t min;    //\u5206\n  uint8_t sec;    //\u79d2\n  uint8_t day;    //\u661f\u671f\n};\n\n// \u661f\u671f\u5b57\u7b26\u4e32\nchar weekofday[7][10] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};\n\nuint8_t bcd2dec(uint8_t);\nuint8_t dec2bcd(uint8_t);\nvoid write_data(uint8_t);\nvoid write_data(uint8_t*, uint8_t);\nuint8_t read_data();\nvoid write_data(uint8_t*, uint8_t);\nTime readTime();\nvoid setTime(Time);\nvoid setAlarm(uint8_t, uint8_t, bool choice = false);\nbool readAlarmFlag(bool choice = false);\nvoid turnAlarmOFF(bool choice = false);\nint8_t readTemp();\n\nvoid setup() {\n  Wire.begin();// \u521d\u59cb\u5316I2C\n  Wire.setClock(100 * 1000);// \u8bbe\u7f6eI2C\u9891\u7387\u4e3a100KHz\n  Serial.begin(115200);\n  Time now = {2022, 2, 10, 12, 30, 0, 4}; // 2022-2-10 12:30:0 Thursday\n  setTime(now);\n  setAlarm(12, 31);\n  turnAlarmOFF();\n}\n\nvoid loop() {\n  char str[50];\n  Time now = readTime();// \u66f4\u65b0\u65f6\u95f4\n  sprintf(// \u683c\u5f0f\u5316\u4e00\u6bb5\u5b57\u7b26\u4e32\u6570\u636e\n    str,\n    "%d-%d-%d %d:%d:%d %s %d^C ",\n    now.year, now.mon, now.date, now.hour, now.min, now.sec, weekofday[now.day], readTemp()\n  );\n  Serial.print(str);\n  if (readAlarmFlag()) {\n    Serial.println("Alarm ON!");\n    turnAlarmOFF();\n  }\n  else Serial.println("Alarm OFF!");\n  delay(1000);\n}\n\n// \u5c06BCD\u6570\u636e\u8f6c\u6362\u6210DEC\u683c\u5f0f\nuint8_t bcd2dec(uint8_t bcd) {\n  uint8_t ones = bcd % 0x10;\n  uint8_t tens = bcd / 0x10;\n  uint8_t dec = ones + tens * 10;\n  return dec;\n}\n\n// \u5c06DEC\u6570\u636e\u8f6c\u6362\u6210BCD\u683c\u5f0f\nuint8_t dec2bcd(uint8_t dec) {\n  uint8_t ones = dec % 10;\n  uint8_t tens = dec / 10;\n  uint8_t bcd = ones + tens * 0x10;\n  return bcd;\n}\n\n// \u5199\u5165\u4e00\u4e2a\u5b57\u8282\nvoid write_data(uint8_t data) {\n  Wire.beginTransmission(DS3231_ADDRESS);\n  Wire.write(data);\n  Wire.endTransmission();\n}\n\n// \u5199\u5165\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\nvoid write_data(uint8_t *data, uint8_t length) {\n  Wire.beginTransmission(DS3231_ADDRESS);\n  Wire.write(data, length);\n  Wire.endTransmission();\n}\n\n// \u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\nuint8_t read_data() {\n  Wire.requestFrom(DS3231_ADDRESS, 1);\n  return Wire.read();\n}\n\n// \u8bfb\u53d6\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u7684\u6570\u7ec4\nvoid read_data(uint8_t* data, uint8_t length) {\n  Wire.requestFrom(DS3231_ADDRESS, length);\n  for (uint8_t i = 0; i < length; i++) {\n    data[i] = Wire.read();\n  }\n}\n\n// \u8fde\u7eed\u8bfb\u53d6\u6574\u4e2a\u65f6\u95f4\nTime readTime() {\n  Time now;\n  uint8_t data[7];\n  write_data(SECOND_ADDRESS);\n  read_data(data, 7);\n  // \u8bfb\u53d6\u540e\u7684\u6570\u636e\u9700\u8981\u8f6c\u6362\u683c\u5f0f\n  now.sec = bcd2dec(data[0]);\n  now.min = bcd2dec(data[1]);\n  now.hour = bcd2dec(data[2]);\n  now.day = bcd2dec(data[3]);\n  now.date = bcd2dec(data[4]);\n  now.mon = bcd2dec(data[5]);\n  now.year = bcd2dec(data[6]) + 2000;\n  return now;\n}\n\n// \u8fde\u7eed\u8bbe\u7f6e\u6574\u4e2a\u65f6\u95f4\nvoid setTime(Time now) {\n  // \u8bb0\u5f97\u5199\u5165\u6570\u636e\u524d\u5148\u5c06DEC\u6570\u636e\u8f6c\u6362\u6210BCD\u683c\u5f0f\n  uint8_t data[] = {\n    SECOND_ADDRESS,\n    dec2bcd(now.sec),\n    dec2bcd(now.min),\n    dec2bcd(now.hour),\n    dec2bcd(now.day),\n    dec2bcd(now.date),\n    dec2bcd(now.mon),\n    dec2bcd(now.year % 100),\n  };\n  write_data(data, 8);\n}\n\n// \u8bbe\u7f6e\u95f9\u949f\uff0chour\uff1aminute\u683c\u5f0f\uff0c\u6bcf\u65e5\u95f9\u94c3\uff0c\u8bb0\u5f97\u5199\u5165\u6570\u636e\u524d\u5148\u5c06DEC\u6570\u636e\u8f6c\u6362\u6210BCD\u683c\u5f0f\nvoid setAlarm(uint8_t hour, uint8_t minute, bool choice = false) {\n  // \u95f9\u949f1\n  if (!choice) {\n    uint8_t data[] = {\n      ALARM1_SECOND_ADDRESS,\n      0,                        //\u79d2\uff0cA1M1=0\n      dec2bcd(minute),          //\u5206\uff0cA1M2=0\n      dec2bcd(hour),            //\u65f6\uff0cA1M3=0\n      0x80,                     //\u5929/\u661f\u671f\uff0cA1M4=1\n    };\n    write_data(data, 5);\n  }\n  // \u95f9\u949f2\n  else {\n    uint8_t data[] = {\n      ALARM2_MINUTE_ADDRESS,\n      dec2bcd(minute),          //\u5206\uff0cA2M2=0\n      dec2bcd(hour),            //\u65f6\uff0cA2M3=0\n      0x80,                     //\u5929/\u661f\u671f\uff0cA2M4=1\n    };\n    write_data(data, 4);\n  }\n}\n\nbool readAlarmFlag(bool choice = false) {\n  write_data(STATUS_ADDRESS);\n  // \u95f9\u949f1Flag\n  if (!choice) {\n    bool flag = read_data() & 0x01;\n    return flag;\n  }\n  // \u95f9\u949f2flag\n  else {\n    bool flag = (read_data() & 0x02) >> 1;\n    return flag;\n  }\n}\n\n// \u5173\u95ed\u95f9\u949fFlag\nvoid turnAlarmOFF(bool choice = false) {\n  write_data(STATUS_ADDRESS);\n  uint8_t mask = 0xFE;\n  if (choice)mask = 0xFD;\n  uint8_t data[] = {STATUS_ADDRESS, read_data() & mask};\n  write_data(data, 2);\n}\n\n// \u8bfb\u53d6\u6e29\u5ea6\uff0c\u5ffd\u7565\u6e29\u5ea6\u7684\u5c0f\u6570\u4f4d\uff0c\u53ea\u8bfb\u53d6\u6574\u6570\u4f4d\uff0c\u4ece\u800c\u6e29\u5ea6\u5728DS3231\u4e2d\u7684\u6570\u636e\u7c7b\u578bint8_t\nint8_t readTemp() {\n  write_data(TEMPERATURE_ADDRESS);\n  int8_t temperature = read_data();\n  return temperature;\n}\n')))}m.isMDXComponent=!0}}]);