"use strict";(self.webpackChunkstas=self.webpackChunkstas||[]).push([[1726],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>C});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},c=Object.keys(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var a=r.createContext({}),s=function(n){var e=r.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},u=function(n){var e=s(n.components);return r.createElement(a.Provider,{value:e},n.children)},p="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},E=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,c=n.originalType,a=n.parentName,u=l(n,["components","mdxType","originalType","parentName"]),p=s(t),E=i,C=p["".concat(a,".").concat(E)]||p[E]||d[E]||c;return t?r.createElement(C,o(o({ref:e},u),{},{components:t})):r.createElement(C,o({ref:e},u))}));function C(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var c=t.length,o=new Array(c);o[0]=E;var l={};for(var a in e)hasOwnProperty.call(e,a)&&(l[a]=e[a]);l.originalType=n,l[p]="string"==typeof n?n:i,o[1]=l;for(var s=2;s<c;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}E.displayName="MDXCreateElement"},2475:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const c={title:"\u521d\u4ee3\u95e8\u7981\u7248\u672c"},o="\u521d\u4ee3\u95e8\u7981\u7248\u672c",l={unversionedId:"electronics/projects/nfc/chapter1",id:"electronics/projects/nfc/chapter1",title:"\u521d\u4ee3\u95e8\u7981\u7248\u672c",description:"\u867d\u7136\u8bf4\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u6211\u5236\u4f5c\u7684\u6700\u65b0\u7248\u672c\uff0c\u524d\u4ee3\u4e5f\u6709\u5f88\u591a\u95ee\u9898\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u8ba4\u4e3a\u6709\u5fc5\u8981\u8ba9\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u6837\u4e5f\u80fd\u5f00\u9614\u5927\u5bb6\u7684\u601d\u7ef4\u3002",source:"@site/docs/electronics/projects/nfc/chapter1.md",sourceDirName:"electronics/projects/nfc",slug:"/electronics/projects/nfc/chapter1",permalink:"/docs/electronics/projects/nfc/chapter1",draft:!1,tags:[],version:"current",frontMatter:{title:"\u521d\u4ee3\u95e8\u7981\u7248\u672c"},sidebar:"docs",previous:{title:"\u529e\u516c\u5ba4\u95e8\u7981\u5386\u53f2",permalink:"/docs/electronics/projects/nfc"},next:{title:"\u76ee\u524d\u95e8\u7981\u7248\u672c",permalink:"/docs/electronics/projects/nfc/chapter2"}},a={},s=[{value:"1. \u4e00\u4ee3\u7248\u672c\u2014\u2014\u7ee7\u7535\u5668\u7248",id:"1-\u4e00\u4ee3\u7248\u672c\u7ee7\u7535\u5668\u7248",level:2},{value:"2. \u4e8c\u4ee3\u7248\u672c\u2014\u2014\u8235\u673a\u7248",id:"2-\u4e8c\u4ee3\u7248\u672c\u8235\u673a\u7248",level:2},{value:"3. \u4e09\u4ee3\u7248\u672c\u2014\u2014\u6b65\u8fdb\u7535\u673a\u7248",id:"3-\u4e09\u4ee3\u7248\u672c\u6b65\u8fdb\u7535\u673a\u7248",level:2}],u={toc:s},p="wrapper";function d(n){let{components:e,...c}=n;return(0,i.kt)(p,(0,r.Z)({},u,c,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u521d\u4ee3\u95e8\u7981\u7248\u672c"},"\u521d\u4ee3\u95e8\u7981\u7248\u672c"),(0,i.kt)("p",null,"\u867d\u7136\u8bf4\u6211\u4eec\u76ee\u524d\u4f7f\u7528\u7684\u6211\u5236\u4f5c\u7684\u6700\u65b0\u7248\u672c\uff0c\u524d\u4ee3\u4e5f\u6709\u5f88\u591a\u95ee\u9898\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u8ba4\u4e3a\u6709\u5fc5\u8981\u8ba9\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\uff0c\u8fd9\u6837\u4e5f\u80fd\u5f00\u9614\u5927\u5bb6\u7684\u601d\u7ef4\u3002"),(0,i.kt)("h2",{id:"1-\u4e00\u4ee3\u7248\u672c\u7ee7\u7535\u5668\u7248"},"1. \u4e00\u4ee3\u7248\u672c\u2014\u2014\u7ee7\u7535\u5668\u7248"),(0,i.kt)("p",null,"\u7ee7\u7535\u5668\u8fd9\u4e2a\u7248\u672c\u662f\u5927\u4f6c\u4eec\u7684\u505a\u6cd5\uff0c\u53ef\u80fd\u4e5f\u662f\u6bd4\u8f83\u4e13\u4e1a\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u53ef\u80fd\u662f\u6211\u5b66\u8bc6\u6d45\u8584\uff0c\u6709\u4e9b\u95ee\u9898\u89e3\u51b3\u4e0d\u4e86\uff0c\u6240\u4ee5\u5c31\u653e\u5f03\u4e86\u3002\u5927\u5bb6\u81ea\u5df1\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u3002"),(0,i.kt)("p",null,"\u7ee7\u7535\u5668\u7248\u7684\u63a5\u7ebf\u56fe\u5982\u4e0b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Relay Version",src:t(2083).Z,width:"1000",height:"1005"})),(0,i.kt)("p",null,"\u6211\u4f7f\u7528\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <SPI.h>\n#include <MFRC522.h>\n\nconst int SS_PIN = 10;\nconst int RST_PIN = 9;\nconst int Buzzer = 8;\nconst int Relay = 7;\nconst int UIDNUM = 50;\n\nconst String UID[UIDNUM] = {\n    "F1 41 01 5F", "01 5E 95 2B", "1A FD A5 21", "E1 D8 FC 5E", "E1 E0 00 5F",\n    "D1 7E FF 5E", "21 DE 01 5F", "D1 3A F6 5E", "31 AB FD 5E", "21 35 F7 5E",\n    "0A 57 80 1C", "FA 5D 70 7F", "D2 AA 1C 3E", "15 4F B9 E5", "75 89 B6 E5",\n    "0A 8C 36 B6", "00 69 0F 93", "75 89 B6 E5", "FA 50 35 B6", "EA B1 1C 3E",\n    "60 DB 0D 93", "5A 32 34 B6", "72 B1 85 44", "A3 A4 1B 3E", "0C 3C 1A 3F",\n    "72 B1 85 44", "50 DF D3 03", "A5 72 1B 3E", "A1 C2 53 74", "6C AE 73 17",\n    "0A 46 95 1C", "47 25 38 E1", "DC 53 14 3E", "80 54 0C 93", "2A 76 64 21",\n    "10 FD FC 2E", "19 F0 95 B4", "D7 FC 80 67", "60 B9 2A BE", "75 36 B5 E5",\n    "87 90 91 5E", "69 E9 1F C5", "C9 DE 3B B4", "08 71 21 DC", "9C B3 BC 3E",\n    "17 A4 91 5E", "F7 88 94 5E", "89 28 3A B4", "BC C3 87 43", "DC FB 0E 3F",\n};\n\nMFRC522 mfrc522(SS_PIN, RST_PIN);\n\nvoid BuzzerRing(boolean Dur = false) {\n    for (uint8_t i = 0; i < 2; i++) {\n        tone(Buzzer, 300);\n        if (Dur)delay(200);\n        else delay(100);\n        noTone(Buzzer);\n        delay(100);\n    }\n}\n\nboolean GetKey(String CONTECTED_UID) {\n    for (uint8_t i = 0; i < UIDNUM; i++)\n        if (CONTECTED_UID == UID[i])return true;\n    return false;\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    SPI.begin();\n    mfrc522.PCD_Init();\n    pinMode(Relay, OUTPUT);\n    pinMode(Buzzer, OUTPUT);\n    BuzzerRing();\n    Serial.print("System Started!\\nBuilt in UID Num:");\n    Serial.println(UIDNUM);\n    delay(3000);\n}\n\nvoid loop()\n{\n    if ( ! mfrc522.PICC_IsNewCardPresent())return;\n    if ( ! mfrc522.PICC_ReadCardSerial())return;\n\n    String content = "";\n    Serial.print("UID(");\n    for (byte i = 0; i < mfrc522.uid.size; i++)\n    {\n        Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");\n        Serial.print(mfrc522.uid.uidByte[i], HEX);\n        content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));\n        content.concat(String(mfrc522.uid.uidByte[i], HEX));\n    }\n    content.toUpperCase();\n    String CONTECTED_UID = content.substring(1);\n\n    if (GetKey(CONTECTED_UID)) {\n        Serial.println(" ):Access Accpeted!");\n        BuzzerRing();\n        digitalWrite(Relay, HIGH);\n        delay(1000);\n        digitalWrite(Relay, LOW);\n    }\n    else {\n        Serial.println(" ):Access Denied!");\n        BuzzerRing(true);\n    }\n}\n')),(0,i.kt)("h2",{id:"2-\u4e8c\u4ee3\u7248\u672c\u8235\u673a\u7248"},"2. \u4e8c\u4ee3\u7248\u672c\u2014\u2014\u8235\u673a\u7248"),(0,i.kt)("p",null,"\u8235\u673a\u7248\u548c\u7ee7\u7535\u5668\u7248\u51e0\u4e4e\u4e00\u81f4\uff0c\u53ea\u662f\u5c06\u7ee7\u7535\u5668\u6362\u6210\u8235\u673a\u7f62\u4e86\u3002"),(0,i.kt)("p",null,"\u8235\u673a\u7248\u63a5\u7ebf\u56fe\u5982\u4e0b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Servo Version",src:t(4048).Z,width:"1000",height:"1314"})),(0,i.kt)("p",null,"\u6211\u4f7f\u7528\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <SPI.h>\n#include <Servo.h>\n#include <MFRC522.h>\n\nconst int SS_PIN = 10;\nconst int RST_PIN = 9;\nconst int Buzzer = 7;\nconst int UIDNUM = 50;\n\nconst String UID[UIDNUM] = {\n  "F1 41 01 5F", "01 5E 95 2B", "1A FD A5 21", "E1 D8 FC 5E", "E1 E0 00 5F",\n  "D1 7E FF 5E", "21 DE 01 5F", "D1 3A F6 5E", "31 AB FD 5E", "21 35 F7 5E",\n  "0A 57 80 1C", "FA 5D 70 7F", "D2 AA 1C 3E", "15 4F B9 E5", "75 89 B6 E5",\n  "0A 8C 36 B6", "00 69 0F 93", "75 89 B6 E5", "FA 50 35 B6", "EA B1 1C 3E",\n  "60 DB 0D 93", "5A 32 34 B6", "72 B1 85 44", "A3 A4 1B 3E", "0C 3C 1A 3F",\n  "72 B1 85 44", "50 DF D3 03", "A5 72 1B 3E", "A1 C2 53 74", "6C AE 73 17",\n  "0A 46 95 1C", "47 25 38 E1", "DC 53 14 3E", "80 54 0C 93", "2A 76 64 21",\n  "10 FD FC 2E", "19 F0 95 B4", "D7 FC 80 67", "60 B9 2A BE", "75 36 B5 E5",\n  "87 90 91 5E", "69 E9 1F C5", "C9 DE 3B B4", "08 71 21 DC", "9C B3 BC 3E",\n  "17 A4 91 5E", "F7 88 94 5E", "89 28 3A B4", "BC C3 87 43", "DC FB 0E 3F",\n};\n\nServo myservo;\nMFRC522 mfrc522(SS_PIN, RST_PIN);\n\nvoid BuzzerRing(boolean Dur = false) {\n  for (uint8_t i = 0; i < 2; i++) {\n    tone(Buzzer, 300);\n    if (Dur)delay(200);\n    else delay(100);\n    noTone(Buzzer);\n    delay(100);\n  }\n}\n\nboolean GetKey(String CONTECTED_UID) {\n  for (uint8_t i = 0; i < UIDNUM; i++)\n    if (CONTECTED_UID == UID[i])return true;\n  return false;\n}\n\nvoid setup()\n{\n  Serial.begin(115200);\n  SPI.begin();\n  mfrc522.PCD_Init();\n  myservo.attach(8);\n  myservo.write(40);\n  pinMode(Buzzer, OUTPUT);\n  BuzzerRing();\n  Serial.print("System Started!\\nBuilt in UID Num:");\n  Serial.println(UIDNUM);\n  delay(3000);\n}\n\nvoid loop()\n{\n  if ( ! mfrc522.PICC_IsNewCardPresent())return;\n  if ( ! mfrc522.PICC_ReadCardSerial())return;\n\n  String content = "";\n  Serial.print("UID(");\n  for (byte i = 0; i < mfrc522.uid.size; i++)\n  {\n    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");\n    Serial.print(mfrc522.uid.uidByte[i], HEX);\n    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));\n    content.concat(String(mfrc522.uid.uidByte[i], HEX));\n  }\n  content.toUpperCase();\n  String CONTECTED_UID = content.substring(1);\n\n  if (GetKey(CONTECTED_UID)) {\n    Serial.println(" ):Access Accpeted!");\n    BuzzerRing();\n    for (int pos = 40; pos <= 60; pos += 1) {\n      myservo.write(pos);\n      delay(5);\n    }\n    delay(1000);\n    for (int pos = 60; pos >= 40; pos -= 1) {\n      myservo.write(pos);\n      delay(5);\n    }\n  }\n  else {\n    Serial.println(" ):Access Denied!");\n    BuzzerRing(true);\n  }\n}\n')),(0,i.kt)("h2",{id:"3-\u4e09\u4ee3\u7248\u672c\u6b65\u8fdb\u7535\u673a\u7248"},"3. \u4e09\u4ee3\u7248\u672c\u2014\u2014\u6b65\u8fdb\u7535\u673a\u7248"),(0,i.kt)("p",null,"\u6b65\u8fdb\u7535\u673a\u7248\u548c\u524d\u9762\u4e5f\u662f\u7c7b\u4f3c\uff0c\u53ea\u662f\u5c06\u8235\u673a\u6362\u6210\u6b65\u8fdb\u7535\u673a\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528 28BYJ-48 \u6b65\u8fdb\u7535\u673a\u3002"),(0,i.kt)("p",null,"\u6b65\u8fdb\u7535\u673a\u7248\u63a5\u7ebf\u56fe\u5982\u4e0b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Relay Version",src:t(8496).Z,width:"1000",height:"1365"})),(0,i.kt)("p",null,"\u6211\u4f7f\u7528\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <SPI.h>\n#include <MFRC522.h>\n#include <AccelStepper.h>\n\nconst uint8_t PinA = 2;\nconst uint8_t PinB = 3;\nconst uint8_t PinC = 4;\nconst uint8_t PinD = 5;\nconst uint8_t Buzzer = 8;\nconst uint8_t RST_PIN = 9;\nconst uint8_t SS_PIN = 10;\nconst uint16_t stepsPerRevolution = 400;\nconst uint8_t UIDNUM = 37;\n\nconst String UID[UIDNUM] = {\n  "F1 41 01 5F", "01 5E 95 2B", "1A FD A5 21", "E1 D8 FC 5E", "E1 E0 00 5F",\n  "D1 7E FF 5E", "21 DE 01 5F", "D1 3A F6 5E", "31 AB FD 5E", "21 35 F7 5E",\n  "0A 57 80 1C", "FA 5D 70 7F", "D2 AA 1C 3E", "15 4F B9 E5", "75 89 B6 E5",\n  "0A 8C 36 B6", "00 69 0F 93", "75 89 B6 E5", "FA 50 35 B6", "EA B1 1C 3E",\n  "60 DB 0D 93", "5A 32 34 B6", "72 B1 85 44", "A3 A4 1B 3E", "0C 3C 1A 3F",\n  "72 B1 85 44", "50 DF D3 03", "A5 72 1B 3E", "A1 C2 53 74", "6C AE 73 17",\n  "0A 46 95 1C", "47 25 38 E1", "DC 53 14 3E", "80 54 0C 93", "2A 76 64 21",\n  "DC FB 0E 3F", "5A 20 4C 2D",\n};\n\nMFRC522 mfrc522(SS_PIN, RST_PIN);\nAccelStepper stepper(8, PinA, PinC, PinB, PinD);\n\nvoid BuzzerRing(boolean Dur = false) {\n  for (uint8_t i = 0; i < 2; i++) {\n    digitalWrite(Buzzer, HIGH);\n    if (Dur)delay(200);\n    else delay(100);\n    digitalWrite(Buzzer, LOW);\n    delay(100);\n  }\n}\n\nboolean GetKey(String CONTECTED_UID) {\n  for (uint8_t i = 0; i < UIDNUM; i++)\n    if (CONTECTED_UID == UID[i])return true;\n  return false;\n}\n\nvoid setup()\n{\n  SPI.begin();\n  Serial.begin(115200);\n  mfrc522.PCD_Init();\n  stepper.setMaxSpeed(500.0);\n  stepper.setAcceleration(1000.0);\n  stepper.runToNewPosition(0);\n  pinMode(Buzzer, OUTPUT);\n  BuzzerRing();\n  Serial.print("System Started!\\nBuilt in UID Num:");\n  Serial.println(UIDNUM);\n  delay(3000);\n}\n\nvoid loop()\n{\n  if ( ! mfrc522.PICC_IsNewCardPresent())return;\n  if ( ! mfrc522.PICC_ReadCardSerial())return;\n\n  String content = "";\n  Serial.print("UID(");\n  for (byte i = 0; i < mfrc522.uid.size; i++) {\n    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");\n    Serial.print(mfrc522.uid.uidByte[i], HEX);\n    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));\n    content.concat(String(mfrc522.uid.uidByte[i], HEX));\n  }\n  content.toUpperCase();\n  String CONTECTED_UID = content.substring(1);\n\n  if (GetKey(CONTECTED_UID)) {\n    Serial.println(" ):Access Accpeted!");\n    BuzzerRing();\n    stepper.runToNewPosition(stepsPerRevolution);\n    delay(1000);\n    stepper.runToNewPosition(0);\n  }\n  else {\n    Serial.println(" ):Access Denied!");\n    BuzzerRing(true);\n  }\n  delay(3000);\n}\n')))}d.isMDXComponent=!0},2083:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/1-1-505861546461d6b8c238f4c90a5675b2.png"},4048:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/1-2-91c04aed4a6acc73a5b9c33aedff021d.png"},8496:(n,e,t)=>{t.d(e,{Z:()=>r});const r=t.p+"assets/images/1-3-e31d26f0498a2086524c3417540dcdc3.png"}}]);