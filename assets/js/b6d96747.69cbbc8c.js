"use strict";(self.webpackChunkstas=self.webpackChunkstas||[]).push([[9108],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=o(n),k=r,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||l;return n?a.createElement(m,i(i({ref:t},c),{},{components:n})):a.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8365:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={title:"SPI\u901a\u4fe1\u539f\u7406"},i="SPI \u901a\u4fe1\u539f\u7406",p={unversionedId:"electronics/communication/serial/spi/chapter1",id:"electronics/communication/serial/spi/chapter1",title:"SPI\u901a\u4fe1\u539f\u7406",description:"1. SPI \u5f15\u811a\u4ecb\u7ecd",source:"@site/docs/electronics/communication/serial/spi/chapter1.md",sourceDirName:"electronics/communication/serial/spi",slug:"/electronics/communication/serial/spi/chapter1",permalink:"/docs/electronics/communication/serial/spi/chapter1",draft:!1,tags:[],version:"current",frontMatter:{title:"SPI\u901a\u4fe1\u539f\u7406"},sidebar:"docs",previous:{title:"SPI\u7b80\u4ecb",permalink:"/docs/electronics/communication/serial/spi"},next:{title:"MPU9250\u6570\u636e\u624b\u518c\u901f\u89c8",permalink:"/docs/electronics/communication/serial/spi/chapter2"}},s={},o=[{value:"1. SPI \u5f15\u811a\u4ecb\u7ecd",id:"1-spi-\u5f15\u811a\u4ecb\u7ecd",level:2},{value:"2. CPOL \u548c CPHA",id:"2-cpol-\u548c-cpha",level:2},{value:"3. SPI \u7684\u901a\u4fe1\u8fc7\u7a0b",id:"3-spi-\u7684\u901a\u4fe1\u8fc7\u7a0b",level:2},{value:"4. SPI \u7684\u4f18\u7f3a\u70b9",id:"4-spi-\u7684\u4f18\u7f3a\u70b9",level:2},{value:"5. Arduino \u7684 SPI \u5e93",id:"5-arduino-\u7684-spi-\u5e93",level:2},{value:"5.1 begin()",id:"51-begin",level:3},{value:"5.2 setsetClockDivider()",id:"52-setsetclockdivider",level:3},{value:"5.3 setBitOrder()",id:"53-setbitorder",level:3},{value:"5.4 setDataMode()",id:"54-setdatamode",level:3},{value:"5.5 beginTransaction()",id:"55-begintransaction",level:3},{value:"5.6 SPISettings",id:"56-spisettings",level:3},{value:"5.7 endTransaction()",id:"57-endtransaction",level:3},{value:"5.8 transfer(), transfer16()",id:"58-transfer-transfer16",level:3},{value:"6. \u9002\u7528\u4e8e\u54ea\u4e9b\u8bbe\u5907",id:"6-\u9002\u7528\u4e8e\u54ea\u4e9b\u8bbe\u5907",level:2}],c={toc:o},u="wrapper";function d(e){let{components:t,...l}=e;return(0,r.kt)(u,(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spi-\u901a\u4fe1\u539f\u7406"},"SPI \u901a\u4fe1\u539f\u7406"),(0,r.kt)("h2",{id:"1-spi-\u5f15\u811a\u4ecb\u7ecd"},"1. SPI \u5f15\u811a\u4ecb\u7ecd"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u5178\u578b\u7684\u5355\u4e3b\u4ece\u673a\u6a21\u5f0f\u7684 SPI \u793a\u610f\u56fe\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"SPI Circuit",src:n(7747).Z,width:"1000",height:"340"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MOSI(Master In Slave Out)"),"\u2014\u2014\u7528\u4e8e\u4e3b\u673a\u5411\u4ece\u673a\u53d1\u9001\u6570\u636e\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MISO(Master In Slave Out)"),"\u2014\u2014\u7528\u4e8e\u4ece\u673a\u5411\u4e3b\u673a\u53d1\u9001\u6570\u636e\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SCK(Serial Clock)"),"\u2014\u2014\u7528\u4e8e\u540c\u6b65\u4e3b\u4ece\u673a\u7684\u65f6\u949f\u9891\u7387\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CS(Chip Select)"),"\u2014\u2014\u4e5f\u79f0 SS(Slave Select)\uff0c\u7528\u4e8e\u4e3b\u673a\u9009\u62e9\u9700\u8981\u901a\u4fe1\u7684\u4ece\u673a\u3002")),(0,r.kt)("h2",{id:"2-cpol-\u548c-cpha"},"2. CPOL \u548c CPHA"),(0,r.kt)("p",null,"\u524d\u9762\u8bb2\u5230\uff0cSPI \u7684\u901a\u4fe1\u534f\u8bae\u6709\u7740\u7075\u6d3b\u7684\u53d8\u79cd\uff0c\u8fd9\u4e2a\u53d8\u5316\u4e3b\u8981\u662f\u5728\u65f6\u949f\u7ebf\u4e0a\u3002\u5373",(0,r.kt)("strong",{parentName:"p"},"CPOL(Clock Polarity)"),"\u548c",(0,r.kt)("strong",{parentName:"p"},"CPHA(Clock Phase)"),"\uff0c\u4e5f\u5c31\u662f\u65f6\u949f\u6781\u6027\u548c\u65f6\u949f\u76f8\u4f4d\u3002"),(0,r.kt)("p",null,"CPOL \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u65f6\u949f\u662f\u5728\u9ad8\u7535\u5e73\u65f6\u7a7a\u95f2\u8fd8\u662f\u5728\u4f4e\u7535\u5e73\u65f6\u7a7a\u95f2\u3002\u5982\u679c CPOL \uff1d 0\uff0c\u5219\u5148\u51fa\u73b0\u4e0a\u5347\u6cbf\uff0c\u518d\u51fa\u73b0\u4e0b\u964d\u6cbf\uff1b\u5982\u679c CPOL \uff1d 1\uff0c\u5148\u51fa\u73b0\u4e0b\u964d\u6cbf\uff0c\u518d\u51fa\u73b0\u4e0a\u5347\u6cbf\u3002\u5927\u90e8\u5206\u8bbe\u5907 CPOL \uff1d 0\u3002"),(0,r.kt)("p",null,"CPHA \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6570\u636e\u662f\u5426\u5728\u65f6\u949f\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u79fb\u5165\u6216\u79fb\u51fa\u3002\u5982\u679c CPHA=0\uff0cMOSI \u548c MISO \u5728\u65f6\u949f\u7ebf\u7684\u4e0a\u5347\u6cbf\u8bfb\u53d6\u6570\u636e\uff0c\u4e0b\u964d\u6cbf\u6539\u53d8\u6570\u636e\uff1b\u5982\u679c CPHA=1\uff0cMOSI \u548c MISO \u5728\u65f6\u949f\u7ebf\u7684\u4e0b\u964d\u6cbf\u8bfb\u53d6\u6570\u636e\uff0c\u4e0a\u5347\u6cbf\u6539\u53d8\u6570\u636e\u3002\u5927\u90e8\u5206\u8bbe\u5907 CPHA \uff1d 0\u3002"),(0,r.kt)("p",null,"\u6839\u636e CPOL \u548c CPHA \u7684\u4e0d\u540c\uff0cSPI \u901a\u4fe1\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u56db\u7c7b\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"SPI\u6a21\u5f0f\u793a\u610f\u56fe",src:n(4438).Z,width:"1000",height:"263"})),(0,r.kt)("p",null,"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0cSPI \u7684\u901a\u4fe1\u6a21\u5f0f\u4e3a",(0,r.kt)("strong",{parentName:"p"},"\u6a21\u5f0f 0"),"\u3002"),(0,r.kt)("h2",{id:"3-spi-\u7684\u901a\u4fe1\u8fc7\u7a0b"},"3. SPI \u7684\u901a\u4fe1\u8fc7\u7a0b"),(0,r.kt)("p",null,"SPI \u867d\u7136\u4e0d\u50cf UART \u90a3\u6837\uff0c\u6ca1\u6709\u5f00\u59cb\u4f4d\u548c\u7ed3\u675f\u4f4d\uff1b\u4f46\u662f\u548c I2C \u76f8\u4f3c\uff0c\u6709\u5f00\u59cb\u4fe1\u53f7\u548c\u7ed3\u675f\u4fe1\u53f7\u3002"),(0,r.kt)("p",null,"\u5f00\u59cb\u4fe1\u53f7\uff0c\u4e3b\u673a\u62c9\u4f4e CS\uff0c\u8868\u793a\u901a\u4fe1\u5f00\u59cb\u3002"),(0,r.kt)("p",null,"\u7ed3\u675f\u4fe1\u53f7\uff0c\u4e3b\u673a\u62c9\u9ad8 CS\uff0c\u8868\u793a\u901a\u4fe1\u7ed3\u675f\u3002"),(0,r.kt)("p",null,"\u4e00\u822c\u5728\u901a\u4fe1\u8fc7\u7a0b\u4e2d\uff0cMOSI \u548c MISO \u53ef\u4ee5\u4e0d\u95f4\u65ad\u5730\u4f20\u8f93\u6570\u636e\uff0c\u5728\u8fd9\u4e4b\u95f4\u6ca1\u6709\u6821\u9a8c\u4fe1\u606f\uff0c\u901a\u5e38\u90fd\u662f",(0,r.kt)("strong",{parentName:"p"},"\u9ad8\u4f4d\u5728\u524d\uff0c\u4f4e\u4f4d\u5728\u540e"),"\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u6a21\u5f0f 0 \u7684 SPI \u901a\u4fe1\u65f6\u57df\u56fe\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"SPI\u901a\u4fe1\u65f6\u57df\u56fe",src:n(6374).Z,width:"1000",height:"380"})),(0,r.kt)("h2",{id:"4-spi-\u7684\u4f18\u7f3a\u70b9"},"4. SPI \u7684\u4f18\u7f3a\u70b9"),(0,r.kt)("p",null,"SPI \u901a\u4fe1\u7684\u4f18\u70b9\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6ca1\u6709\u5f00\u59cb\u4f4d\u548c\u7ed3\u675f\u4f4d\uff0c\u53ef\u4ee5\u8fde\u7eed\u53d1\u9001\u6570\u636e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6ca1\u6709\u590d\u6742\u7684\u8bbe\u5907\u5730\u5740\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f CS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MOSI \u548c MISO \u53ef\u4ee5\u8ba9\u8bbe\u5907\u540c\u65f6\u6536\u53d1\u9001\u6570\u636e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u4f20\u8f93\u901f\u5ea6\u5feb\uff0c\u6b63\u5e38\u90fd\u53ef\u4ee5\u8fbe\u5230 10MHz \u751a\u81f3\u66f4\u9ad8"))),(0,r.kt)("p",null,"SPI \u901a\u4fe1\u7684\u7f3a\u70b9\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u56db\u6839\u7ebf\uff0c\u6709\u7684\u8bbe\u5907\u8fd8\u6709 D/C \u7ebf\uff0cRST \u7ebf\u7b49\uff0c\u63a5\u7ebf\u76f8\u5bf9\u590d\u6742")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u65e0 ACK \u9a8c\u8bc1\u4fe1\u606f\u662f\u5426\u4f20\u8f93\u6210\u529f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u65e0\u6821\u9a8c\u4fe1\u606f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u673a"))),(0,r.kt)("h2",{id:"5-arduino-\u7684-spi-\u5e93"},"5. Arduino \u7684 SPI \u5e93"),(0,r.kt)("p",null,"Arduino \u7684\u5b98\u65b9 SPI \u5e93\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"SPI.h"),"\uff0cArduino Uno \u53ea\u6709\u4e00\u4e2a SPI \u63a5\u53e3\uff0c\u5373",(0,r.kt)("strong",{parentName:"p"},"MOSI\u2014D11\uff0cMISO\u2014D12\uff0cSCK\u2014D13\uff0cCS\u2014D10"),"\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55 GPIO \u4f5c\u4e3a CS\uff0c\u4e0d\u4e00\u5b9a\u662f D10\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u5bf9 SPI \u5e93\u90e8\u5206\u91cd\u8981\u7684\u51fd\u6570\u505a\u7b80\u5355\u8bb2\u89e3\u3002"),(0,r.kt)("h3",{id:"51-begin"},"5.1 begin()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.begin();\n")),(0,r.kt)("p",null,"\u7528\u4e8e\u521d\u59cb\u5316 SPI\u3002\u9ed8\u8ba4\u4f7f\u7528 SPI \u6a21\u5f0f 0\uff0c4MHz \u65f6\u949f\u9891\u7387\uff0c\u62c9\u9ad8 CS\uff0c\u62c9\u4f4e SCK \u548c MOSI\u3002"),(0,r.kt)("h3",{id:"52-setsetclockdivider"},"5.2 setsetClockDivider()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.setClockDivider(divider);\n")),(0,r.kt)("p",null,"\u7528\u6765\u914d\u7f6e SPI \u7684\u65f6\u949f\u9891\u7387\uff0c\u53ef\u9009\u53c2\u6570\u6709\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV4"),"(Default speed)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV6")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV16")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV32")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV64")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_CLOCK_DIV128"))),(0,r.kt)("h3",{id:"53-setbitorder"},"5.3 setBitOrder()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.setBitOrder(order);\n")),(0,r.kt)("p",null,"\u7528\u6765\u914d\u7f6e SPI \u7684\u6570\u636e\u53d1\u9001\u987a\u5e8f\uff0c\u53ef\u9009\u53c2\u6570\u6709\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"LSBFIRST")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MSBFIRST"))),(0,r.kt)("h3",{id:"54-setdatamode"},"5.4 setDataMode()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.setDataMode(mode);\n")),(0,r.kt)("p",null,"\u7528\u6765\u914d\u7f6e SPI \u7684\u6a21\u5f0f\uff0c\u53ef\u9009\u53c2\u6570\u6709\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_MODE0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_MODE1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_MODE2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SPI_MODE3"))),(0,r.kt)("h3",{id:"55-begintransaction"},"5.5 beginTransaction()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.beginTransaction(mySettings);\n")),(0,r.kt)("p",null,"\u7528\u4e8e\u914d\u7f6e\u66f4\u52a0\u8be6\u7ec6\u7684 SPI \u53c2\u6570\uff0c\u53c2\u6570\u4e3a",(0,r.kt)("strong",{parentName:"p"},"SPISettings"),"\uff0c\u5efa\u8bae\u4e0d\u8981\u540c\u65f6\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"SPI.beginTransaction(mySettings)"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"SPI.setClockDivider"),"\u7b49\uff0c\u4f7f\u7528\u4e00\u4e2a\u914d\u7f6e\u5373\u53ef\u3002"),(0,r.kt)("h3",{id:"56-spisettings"},"5.6 SPISettings"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPISettings mySettting(speedMaximum, dataOrder, dataMode);\n")),(0,r.kt)("p",null,"\u53c2\u6570 speedMaximum\uff1a\u7528\u4e8e\u8bbe\u7f6e SPI \u65f6\u949f\u9891\u7387\uff0c\u9ed8\u8ba4\u4e3a 4MHz\uff0c\u4e00\u822c\u8fd9\u4e2a\u53c2\u6570\u8981\u5c0f\u4e8e\u5355\u7247\u673a\u7684\u65f6\u949f\u9891\u7387\uff0cUno \u677f\u53ef\u4ee5\u8fbe\u5230 14MHz\u3002"),(0,r.kt)("p",null,"\u53c2\u6570 dataOrder\uff1a\u7528\u4e8e\u8bbe\u7f6e\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u662f\u4f4e\u4f4d\u5728\u524d\u8fd8\u662f\u9ad8\u4f4d\u5728\u524d\uff0c\u9ed8\u8ba4\u662f\u9ad8\u4f4d\u5728\u524d\u3002\u53ef\u9009\u503c\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"MSBFIRST "),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"LSBFIRST"),"\u3002"),(0,r.kt)("p",null,"\u53c2\u6570 dataMode\uff1a\u7528\u4e8e\u8bbe\u7f6e SPI \u7684\u901a\u4fe1\u6a21\u5f0f\uff0c\u6a21\u5f0f\u4e3a\u524d\u9762\u4ecb\u7ecd\u7684 4 \u79cd\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3a\u6a21\u5f0f 0\u3002\u53ef\u9009\u503c\u6709",(0,r.kt)("inlineCode",{parentName:"p"},"SPI_MODE0"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"SPI_MODE1"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"SPI_MODE2"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"SPI_MODE3"),"\u3002"),(0,r.kt)("p",null,"\u4e00\u822c\u8bbe\u7f6e\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.beginTransaction(SPISettings(14000000, MSBFIRST, SPI_MODE0));\n")),(0,r.kt)("h3",{id:"57-endtransaction"},"5.7 endTransaction()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"SPI.endTransaction();\n")),(0,r.kt)("p",null,"\u653e\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"SPI.beginTransaction(mySettings)"),"\uff0c\u7528\u4e8e\u7ed3\u675f SPI \u901a\u4fe1\u3002"),(0,r.kt)("h3",{id:"58-transfer-transfer16"},"5.8 transfer(), transfer16()"),(0,r.kt)("p",null,"\u8bed\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"uint8_t receivedVal = SPI.transfer(val);\nuint16_t receivedVal16 = SPI.transfer16(val16);\nSPI.transfer(buffer, size);\n")),(0,r.kt)("p",null,"\u7528\u4e8e\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"uint8_t "),"\u6216\u8005",(0,r.kt)("inlineCode",{parentName:"p"},"uint16_t"),"\uff0c\u4e5f\u53ef\u4ee5\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"uint8_t "),"\u7684\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"SPI.setClockDivider"),"\u7684\u793a\u4f8b\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <SPI.h>\n#define CS 10\n\nvoid setup() {\n  pinMode(CS, OUTPUT);\n  SPI.begin();\n  SPI.setClockDivider(SPI_CLOCK_DIV2);\n\n  // transfer data 128\n  digitalWrite(CS, LOW);\n  SPI.transfer(128);\n  digitalWrite(CS, HIGH);\n}\n\nvoid loop() {\n}\n")),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"SPISettings"),"\u7684\u793a\u4f8b\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"\n#include <SPI.h>\n\n// using two incompatible SPI devices, A and B. Incompatible means that they\n// need different SPI_MODE\nconst int slaveAPin = 20;\nconst int slaveBPin = 21;\nuint8_t stat, val1, val2, result;\n\n// set up the speed, data order and data mode\nSPISettings settingsA(2000000, MSBFIRST, SPI_MODE1);\nSPISettings settingsB(16000000, LSBFIRST, SPI_MODE3);\n\nvoid setup() {\n    // set the Slave Select Pins as outputs:\n    pinMode(slaveAPin, OUTPUT);\n    pinMode(slaveBPin, OUTPUT);\n    // initialize SPI:\n    SPI.begin();\n}\n\nvoid loop() {\n    // read three bytes from device A\n    SPI.beginTransaction(settingsA);\n    digitalWrite(slaveAPin, LOW);\n    // reading only, so data sent does not matter\n    stat = SPI.transfer(0);\n    val1 = SPI.transfer(0);\n    val2 = SPI.transfer(0);\n    digitalWrite(slaveAPin, HIGH);\n    SPI.endTransaction();\n    // if stat is 1 or 2, send val1 or val2 else zero\n    if (stat == 1) {\n        result = val1;\n    } else if (stat == 2) {\n        result = val2;\n    } else {\n        result = 0;\n    }\n    // send result to device B\n    SPI.beginTransaction(settingsB);\n    digitalWrite(slaveBPin, LOW);\n    SPI.transfer(result);\n    digitalWrite(slaveBPin, HIGH);\n    SPI.endTransaction();\n}\n")),(0,r.kt)("h2",{id:"6-\u9002\u7528\u4e8e\u54ea\u4e9b\u8bbe\u5907"},"6. \u9002\u7528\u4e8e\u54ea\u4e9b\u8bbe\u5907"),(0,r.kt)("p",null,"\u5e38\u89c1\u7684\u4f7f\u7528 SPI \u7684\u8bbe\u5907\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"SD Card Module"),(0,r.kt)("th",{parentName:"tr",align:"center"},"RFID Module"),(0,r.kt)("th",{parentName:"tr",align:"center"},"ST7735 TFT Display"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("img",{alt:"SD Card",src:n(677).Z,width:"363",height:"222"})),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("img",{alt:"RFID",src:n(9134).Z,width:"1000",height:"636"})),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("img",{alt:"ST7735",src:n(9192).Z,width:"1000",height:"681"}))))),(0,r.kt)("p",null,"\u4e0b\u4e00\u4e2a\u7ae0\u8282\u6211\u4eec\u5c06\u8be6\u7ec6\u5b66\u4e60\u5982\u4f55\u901a\u8fc7 SPI \u5411 MPU9250 \u8bfb\u5199\u6570\u636e\u3002"))}d.isMDXComponent=!0},7747:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-1-995acb01c0c907451fb29199c8d3c722.png"},4438:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-2-f9ae88209bfdc9a7733859b5094af6ec.png"},6374:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-3-81f5f9be67e27756a4b5f55f2f026b36.png"},677:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-4-08d55e7df272ba7ece6cf4d41e4ddbff.png"},9134:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-5-32341009e23f11c5580c202103d99b69.png"},9192:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/1-6-639b7b083f84d762f6b376cf89cda645.png"}}]);